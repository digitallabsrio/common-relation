{
  "course_name": "Advanced Kubernetes Techniques: Monitoring, Logging, Auto-Scaling - Learn Interactively",
  "course_overview": "The world of DevOps has exploded with the help of technologies like Kubernetes and Docker.  \nIn this course, you will learn about more advanced Kubernetes features such as monitoring, alerting, logging, and scaling - crucial concepts for any DevOps professional. You will learn how to monitor clusters, how to send alerts when potential issues arise, and how to query the whole systemâ€™s metrics and logs. \nBy the end of this course, you will have the required knowledge to make your clusters and applications truly dynamic and resilient, so that they require minimal manual involvement and are self-adaptive.",
  "course_folder": "advanced kubernetes techniques monitoring logging auto scaling",
  "course_lessons": [
    "0-introduction",
    "1-intended audience and course requirements",
    "2-introduction",
    "3-create a cluster",
    "4-install metrics server",
    "5-observe metrics server data",
    "6-get started with auto scaling pods",
    "7-auto scale pods based on resource utilization",
    "8-specify replicas in deployments or statefulsets",
    "9-revise and test the concepts",
    "10-introduction",
    "11-create a cluster",
    "12-set up cluster autoscaler",
    "13-scale up the cluster",
    "14-scale down the cluster",
    "15-can we scale up too much or de scale to zero nodes",
    "16-cluster autoscaler compared in gke eks and aks",
    "17-revise and test the concepts",
    "18-introduction",
    "19-create a cluster",
    "20-choose the tools for storing and querying metrics and alerting",
    "21-defining alert rules",
    "22-seeing green alerts in action",
    "23-seeing red alerts in action",
    "24-which metric types should we use",
    "25-alerting on latency related issues",
    "26-alerting on traffic related issues",
    "27-alerting on error related issues",
    "28-alerting on saturation related issues",
    "29-saturation related issues measure memory usage",
    "30-alerting on unschedulable or failed pods",
    "31-upgrading old pods",
    "32-measuring containers memory and cpu usage",
    "33-comparing actual resource usage with defined requests",
    "34-comparing actual resource usage with defined limits",
    "35-revise and test the concepts",
    "36-introduction",
    "37-create a cluster",
    "38-face a disaster",
    "39-use instrumentation to provide more detailed metrics",
    "40-using internal metrics to debug potential issues",
    "41-revise and test the concepts",
    "42-introduction",
    "43-creating a cluster",
    "44-using horizontalpodautoscaler without metrics adapter",
    "45-exploring prometheus adapter",
    "46-create hpa with custom metrics pulled through exporters",
    "47-create hpa with custom metrics pulled through instrumented metric",
    "48-combine metric server data with custom metrics",
    "49-the complete horizontalpodautoscaler flow of events",
    "50-reaching nirvana",
    "51-revise and test the concepts",
    "52-introduction",
    "53-create a cluster",
    "54-which tools should we use for dashboards",
    "55-installing and setting up grafana",
    "56-importing and customizing pre made dashboards",
    "57-creating custom dashboards",
    "58-creating semaphore dashboards",
    "59-a better dashboard for big screens",
    "60-prometheus and graph alerts grafana notifications semaphores",
    "61-revise and test the concepts",
    "62-introduction",
    "63-create a cluster",
    "64-exploring logs through kubectl",
    "65-choosing a centralized logging solution",
    "66-exploring logs collection and shipping",
    "67-explore centralized logging through papertrail",
    "68-combine gcp stackdriver with a gke cluster",
    "69-combine aws cloudwatch with an eks cluster",
    "70-combine azure log analytics with an aks cluster",
    "71-explore centralized logging",
    "72-switching to elasticsearch for storing metrics",
    "73-what should we expect from centralized logging",
    "74-revise and test the concepts",
    "75-what did we do"
  ],
  "repo_name": "common-relation"
}
